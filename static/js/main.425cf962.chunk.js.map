{"version":3,"sources":["components/Cell.tsx","components/Login.tsx","components/Board.tsx","components/Rules.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["cellStatus","UserRole","Cell","state","status","DEFAULT","mouseOver","text","this","setState","COLORED","style","margin","display","height","props","changeCellState","className","border","borderRight","x","borderBottom","y","boxSizing","width","size","backgroundColor","onMouseEnter","onMouseLeave","onClick","click","bind","Component","Board","cellState","labelX","length","labelY","i","push","j","returnCells","cells","key","gridArea","textAlign","alignItems","split","map","label","cellSize","minWidth","gridTemplate","repeat","touchAction","Login","isDialogVisible","usernameError","passwordError","headerText","username","password","loading","handleClose","setTimeout","userRole","USER","ADMIN","validCredentials","authCallback","Backdrop","open","CircularProgress","color","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","required","autoFocus","fullWidth","onChange","event","target","value","helperText","error","onKeyPress","ev","preventDefault","type","DialogActions","Button","Rules","dividers","tabIndex","marginLeft","marginRight","alt","src","href","App","cellStates","isBoardVisible","isRulesVisible","userrole","role","console","table","variant","defaultValue","InputProps","readOnly","sendSolution","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0MAUYA,E,8IAAAA,O,qBAAAA,I,qBAAAA,I,sBAAAA,M,KAYL,ICXKC,EDWCC,EAAb,2MACEC,MAAmB,CACjBC,OAAQJ,EAAWK,QACnBC,WAAW,EACXC,KAAM,sCAJV,uEAOW,IAAD,OACNC,KAAKC,SACH,CACEL,QAASI,KAAKL,MAAMC,OAAS,GAAK,EAClCG,KACEC,KAAKL,MAAMC,SAAWJ,EAAWU,QAC/B,oCACE,kBAAC,IAAD,CAAWC,MAAO,CAAEC,OAAQ,SAAUC,QAAS,QAASC,OAAQ,WAGlE,uCAGN,WACE,EAAKC,MAAMC,gBAAgB,EAAKb,MAAMC,aArB9C,sCA0BkBA,EAAiBE,GAC/B,OAAIF,EACEE,EAAkB,UACV,UAERA,EAAkB,UACV,YAhClB,+BAoCY,IAAD,OACP,OACE,yBACEW,UAAU,MACVN,MAAO,CACLE,QAAS,eACTK,OAAQ,oBACRC,YAAY,GAAD,OAAKX,KAAKO,MAAMK,EAAI,IAAM,EAAI,EAAI,GAAlC,kBACXC,aAAa,GAAD,OAAKb,KAAKO,MAAMO,EAAI,IAAM,EAAI,EAAI,GAAlC,kBACZC,UAAW,aAEXX,OAAQ,MACRY,MAAOhB,KAAKO,MAAMU,KAClBX,OAAQN,KAAKO,MAAMU,KACnBC,gBAAiBlB,KAAKkB,gBAAgBlB,KAAKL,MAAMC,SAAWJ,EAAWU,QAASF,KAAKL,MAAMG,YAE7FqB,aAAc,kBAAM,EAAKlB,SAAS,CAAEH,WAAW,KAC/CsB,aAAc,kBAAM,EAAKnB,SAAS,CAAEH,WAAW,KAC/CuB,QAASrB,KAAKsB,MAAMC,KAAKvB,OAExBA,KAAKL,MAAMI,UAxDpB,GAA0ByB,aE+HXC,E,YAjIb,WAAYlB,GAAoB,IAAD,uBAC7B,4CAAMA,KATRmB,UAAyB,GAQM,EAN/BpB,OAAS,EAAKC,MAAMoB,OAAOC,OAMI,EAL/BZ,MAAQ,EAAKT,MAAMsB,OAAOD,OAOxB,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAKxB,OAAQwB,IAAK,CACpC,EAAKJ,UAAUK,KAAK,IACpB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAKhB,MAAOgB,IAC9B,EAAKN,UAAUI,GAAGC,MAAK,GALE,OAQ7B,EAAKxB,MAAM0B,YAAY,EAAKP,WARC,E,6EAefd,EAAWE,EAAWlB,GAEpCI,KAAK0B,UAAUZ,GAAGF,GAAKhB,IAAWJ,EAAWU,QAC7CF,KAAKO,MAAM0B,YAAYjC,KAAK0B,a,+BAgB5B,IAZQ,IAAD,OACHQ,EAAuB,CACzB,yBACEC,IAAK,eACLhC,MAAO,CACLO,OAAQ,kBACRK,UAAW,iBANV,WAYEe,GACPI,EAAMH,KACJ,yBACEI,IAAG,mBAAcL,GACjB3B,MAAO,CACLiC,SAAS,OAAD,OAASN,EAAI,EAAb,kBAAwBA,EAAI,GAEpCzB,QAAS,QACTK,OAAQ,oBACRC,YAAY,GAAD,OAAKmB,EAAI,IAAM,EAAI,EAAI,GAAvB,kBACXjB,aAAc,kBACdE,UAAW,aAEXT,OAAQ,OACRU,MAAO,OACPqB,UAAW,SACXC,WAAY,aAGb,EAAK/B,MAAMoB,OAAOG,GAAGS,MAAM,KAAKC,KAAI,SAACC,EAAOT,GAC3C,OACE,yBACEG,IAAG,mBAAcL,EAAd,YAAmBE,IAGrBS,EACD,oCA1BHX,EAAI,EAAGA,EAAI9B,KAAKgB,MAAOc,IAAM,EAA7BA,GAiCT,IAAK,IAAIA,EAAI,EAAGA,EAAI9B,KAAKM,OAAQwB,IAC/BI,EAAMH,KACJ,yBACEI,IAAG,mBAAcL,GACjB3B,MAAO,CACLiC,SAAS,GAAD,OAAKN,EAAI,EAAT,kBAAoBA,EAAI,EAAxB,QACRxB,OAAQN,KAAKO,MAAMmC,SACnBrC,QAAS,QACTK,OAAQ,oBACRG,aAAa,GAAD,OAAKiB,EAAI,IAAM,EAAI,EAAI,GAAvB,kBACZnB,YAAa,kBACbI,UAAW,aACXX,OAAQ,SACRY,MAAO,OACP2B,SAAU3C,KAAKO,MAAMsB,OAAOC,GAAGF,OAAS,KACxCS,UAAW,UAMZrC,KAAKO,MAAMsB,OAAOC,KAMzB,IAxEO,eAwEEA,GACP,IAzEK,eAyEIE,GACPE,EAAMH,KACJ,kBAAC,EAAD,CACEnB,EAAGoB,EACHlB,EAAGgB,EACHb,KAAM,EAAKV,MAAMmC,SACjBP,IAAG,gBAAWH,EAAX,aAAiBF,EAAjB,KACHtB,gBAAiB,SAACZ,GAAD,OAAwB,EAAKY,gBAAgBwB,EAAGF,EAAGlC,QAPjEoC,EAAI,EAAGA,EAAI,EAAKhB,MAAOgB,IAAM,EAA7BA,IADFF,EAAI,EAAGA,EAAI9B,KAAKM,OAAQwB,IAAM,EAA9BA,GAcT,OACE,yBACE3B,MAAO,CACLE,QAAS,cACTD,OAAQ,OACRwC,aAAa,QAAD,OAAU,UAAG5C,KAAKO,MAAMmC,SAAd,OAA4BG,OAAO7C,KAAKM,QAAlD,+BACL,UAAGN,KAAKO,MAAMmC,SAAd,OAA4BG,OAAO7C,KAAKgB,QAC/CN,OAAQ,kBAKRoC,YAAa,iBAGdZ,O,GApIWV,a,uDDAR/B,O,eAAAA,I,iBAAAA,I,4BAAAA,M,SA8KGsD,E,2MA7JbpD,MAAQ,CACNqD,iBAAiB,EACjBC,cAAe,GACfC,cAAe,I,EAGjBC,WAAa,mB,EACbC,SAA0B,K,EAC1BC,SAA0B,K,EAC1BC,SAAU,E,EAEVC,YAAc,WACZ,GAAsB,OAAlB,EAAKH,UAAuC,OAAlB,EAAKC,UAAqB,EAAKD,SAASxB,OAAS,GAAK,EAAKyB,SAASzB,OAAS,EAAG,CAC5G,EAAK3B,SAAS,CAAE+C,iBAAiB,IACjC,EAAKM,SAAU,EAGf,IAAI3B,EAAS,CACX,QACA,UACA,YACA,UACA,QACA,QACA,UACA,QACA,OACA,OACA,MACA,QACA,UACA,UACA,UACA,MACA,YACA,UACA,UACA,QACA,MACA,QACA,QACA,MACA,KAEEE,EAAS,CACX,IACA,KACA,MACA,MACA,MACA,MACA,QACA,QACA,UACA,UACA,UACA,UACA,YACA,gBACA,WACA,WACA,cACA,UACA,QACA,QACA,UACA,YACA,UACA,UACA,SAGF2B,YAAW,WAET,IAAIC,EAA4B,KACV,UAAlB,EAAKL,UAA0C,UAAlB,EAAKC,SAAsBI,EAAWhE,EAASiE,KACrD,UAAlB,EAAKN,UAA0C,UAAlB,EAAKC,WAAsBI,EAAWhE,EAASkE,OAGrF,IAAIC,EAAgC,OAAbH,GAAuC,OAAlB,EAAKL,SACjD,EAAKE,SAAU,EACXM,GAAiC,OAAbH,GAAuC,OAAlB,EAAKL,SAChD,EAAK7C,MAAMsD,aAAa,EAAKT,UAAY,GAAIK,EAAU9B,EAAQE,IAE/D,EAAKsB,WAAa,kDAClB,EAAKlD,SAAS,CAAE+C,iBAAiB,OAElC,Q,wEAIG,IAAD,OACP,OACE,oCACE,kBAACc,EAAA,EAAD,CAAUC,KAAM/D,KAAKsD,SACnB,kBAACU,EAAA,EAAD,CAAkBC,MAAM,aAE1B,kBAACC,EAAA,EAAD,CAAQH,KAAM/D,KAAKL,MAAMqD,gBAAiBmB,QAASnE,KAAKuD,YAAaa,kBAAgB,qBACnF,kBAACC,EAAA,EAAD,CAAaC,GAAG,qBAAqBtE,KAAKmD,YAC1C,kBAACoB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,6EACA,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,WAAS,EACTvE,OAAO,QACPkE,GAAG,WACH7B,MAAM,0BACNmC,WAAS,EACTC,SAAU,SAAAC,GACR,EAAK1B,SAAW0B,EAAMC,OAAOC,MAC7B,EAAK/E,SAAS,CAAEgD,cAAe,EAAKG,SAASxB,OAAS,EAAI,GAAK,sCAEjEqD,WAAYjF,KAAKL,MAAMsD,cACvBiC,MAAOlF,KAAKL,MAAMsD,cAAcrB,OAAS,EACzCuD,WAAY,SAAAC,GACK,UAAXA,EAAGjD,MACLiD,EAAGC,iBACH,EAAK9B,kBAIX,kBAACkB,EAAA,EAAD,CAEEC,UAAQ,EACRtE,OAAO,QACPkE,GAAG,WACH7B,MAAM,YACN6C,KAAK,WACLV,WAAS,EACTC,SAAU,SAAAC,GACR,EAAKzB,SAAWyB,EAAMC,OAAOC,MAC7B,EAAK/E,SAAS,CAAEiD,cAAe,EAAKG,SAASzB,OAAS,EAAI,GAAK,sCAEjEqD,WAAYjF,KAAKL,MAAMuD,cACvBgC,MAAOlF,KAAKL,MAAMuD,cAActB,OAAS,EACzCuD,WAAY,SAAAC,GACK,UAAXA,EAAGjD,MACLiD,EAAGC,iBACH,EAAK9B,mBAKb,kBAACgC,EAAA,EAAD,KAIE,kBAACC,EAAA,EAAD,CAAQnE,QAASrB,KAAKuD,YAAaU,MAAM,WAAzC,2B,GApJQzC,aEfCiE,E,2MACnB9F,MAAQ,CACNqD,iBAAiB,G,EAGnBO,YAAc,WACZ,EAAKtD,SAAS,CAAE+C,iBAAiB,K,wEAGzB,IAAD,OACP,OACE,oCACE,kBAACkB,EAAA,EAAD,CAAQH,KAAM/D,KAAKL,MAAMqD,gBAAiBmB,QAASnE,KAAKuD,YAAaa,kBAAgB,uBACnF,kBAACC,EAAA,EAAD,CAAaC,GAAG,uBAAhB,gBACA,kBAACC,EAAA,EAAD,CAAemB,UAAU,GACvB,kBAAClB,EAAA,EAAD,CACEF,GAAG,4BAEHqB,UAAW,EACXxF,MAAO,CAAEkC,UAAW,YAJtB,uQAgBE,6BAhBF,0dAqBE,6BACA,yBACElC,MAAO,CAAEa,MAAO,MAAO4E,WAAY,OAAQC,YAAa,OAAQxF,QAAS,SACzEyF,IAAI,aACJC,IAAI,+BAEN,6BA3BF,+wBAkCE,6BACA,6BAnCF,uFAqCE,6BArCF,gZAyCE,6BACA,yBACE5F,MAAO,CAAEa,MAAO,MAAO4E,WAAY,OAAQC,YAAa,OAAQxF,QAAS,SACzEyF,IAAI,aACJC,IAAI,+BAEN,6BA/CF,0YAmDE,6BACA,yBACE5F,MAAO,CAAEa,MAAO,MAAO4E,WAAY,OAAQC,YAAa,OAAQxF,QAAS,SACzEyF,IAAI,aACJC,IAAI,+BAEN,6BACA,yBACE5F,MAAO,CAAEa,MAAO,MAAO4E,WAAY,OAAQC,YAAa,OAAQxF,QAAS,SACzEyF,IAAI,aACJC,IAAI,+BAEN,6BA/DF,cAgEU,uBAAGC,KAAK,wEAAR,gBAGZ,kBAACT,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQnE,QAASrB,KAAKuD,YAAaU,MAAM,WAAzC,cAMJ,kBAACuB,EAAA,EAAD,CAAQnE,QAAS,kBAAM,EAAKpB,SAAS,CAAE+C,iBAAkB,EAAKrD,MAAMqD,oBAApE,2C,GAzF2BxB,aCmHpByE,E,2MAxGbC,WAA0B,G,EAE1BvG,MAAQ,CACNwG,gBAAgB,EAChBC,gBAAgB,EAChBhD,SAAU,KACViD,SAAU,KACV1E,OAAQ,GACRE,OAAQ,I,EAGVyB,SAAU,E,EAWVO,aAAe,SAACT,EAAkBkD,EAAgB3E,EAAkBE,GAClE,EAAK5B,SAAS,CAAEmD,SAAUA,EAAUiD,SAAUC,EAAM3E,OAAQA,EAAQE,OAAQA,K,8EAV9D,IAAD,OACb0E,QAAQC,MAAMxG,KAAKkG,YACnBlG,KAAKsD,SAAU,EACfE,YAAW,WACT,EAAKF,SAAU,IAEd,Q,+BAOK,IAAD,OAIP,OACE,yBACE7C,UAAU,MACVN,MACE,IAKF,kBAAC,EAAD,CAAO0D,aAAc7D,KAAK6D,eAC1B,uDAEC7D,KAAKL,MAAM0G,WAAa5G,EAASiE,KAChC,oCACE,kBAACI,EAAA,EAAD,CAAUC,KAAM/D,KAAKsD,SACnB,kBAACU,EAAA,EAAD,CAAkBC,MAAM,aAE1B,kBAAC,EAAD,MACA,6BACCjE,KAAKL,MAAMwG,eACV,kBAAC,EAAD,CACEzD,SAAU,GACVf,OAAQ3B,KAAKL,MAAMgC,OACnBE,OAAQ7B,KAAKL,MAAMkC,OACnBI,YAAa,SAAAiE,GACX,EAAKA,WAAaA,KAItB,8BAEF,2DACA,kBAACzB,EAAA,EAAD,CACEC,UAAQ,EACRjC,MAAM,gCACNgE,QAAQ,WACRtG,MAAO,CACLC,OAAQ,SAGZ,6BACA,kBAACqE,EAAA,EAAD,CACEC,UAAQ,EACRjC,MAAM,0BACNiE,aAAc1G,KAAKL,MAAMyD,SASzBuD,WAAY,CACVC,UAAU,GAEZH,QAAQ,WACRtG,MAAO,CACLC,OAAQ,SAGZ,6BACA,kBAACoF,EAAA,EAAD,CAAQiB,QAAQ,YAAYxC,MAAM,UAAU5C,QAAS,kBAAM,EAAKwF,iBAAhE,mBAKF,0C,GAlGQrF,aCVEsF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DCTnCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.425cf962.chunk.js","sourcesContent":["import ClearIcon from '@material-ui/icons/Clear';\r\nimport React, { Component } from 'react';\r\n\r\ntype CellProps = {\r\n  x: number;\r\n  y: number;\r\n  size: number;\r\n  changeCellState: (status: cellStatus) => void;\r\n};\r\n\r\nexport enum cellStatus {\r\n  DEFAULT,\r\n  COLORED,\r\n  CROSSED,\r\n}\r\n\r\ntype CellState = {\r\n  status: cellStatus;\r\n  mouseOver: boolean;\r\n  text: JSX.Element;\r\n};\r\n\r\nexport class Cell extends Component<CellProps, CellState> {\r\n  state: CellState = {\r\n    status: cellStatus.DEFAULT,\r\n    mouseOver: false,\r\n    text: <></>,\r\n  };\r\n\r\n  click() {\r\n    this.setState(\r\n      {\r\n        status: (this.state.status + 1) % 3,\r\n        text:\r\n          this.state.status === cellStatus.COLORED ? (\r\n            <>\r\n              <ClearIcon style={{ margin: '0 auto', display: 'block', height: '100%' }} />\r\n            </>\r\n          ) : (\r\n            <></>\r\n          ),\r\n      },\r\n      () => {\r\n        this.props.changeCellState(this.state.status);\r\n      },\r\n    );\r\n  }\r\n\r\n  backgroundColor(status: boolean, mouseOver: boolean) {\r\n    if (status) {\r\n      if (mouseOver) return '#808080';\r\n      else return '#404040';\r\n    } else {\r\n      if (mouseOver) return '#D3D3D3';\r\n      else return '#FFFFFF';\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"asd\"\r\n        style={{\r\n          display: 'inline-block',\r\n          border: '0.5px solid black',\r\n          borderRight: `${this.props.x % 5 === 4 ? 2 : 0.5}px solid black`,\r\n          borderBottom: `${this.props.y % 5 === 4 ? 2 : 0.5}px solid black`,\r\n          boxSizing: 'border-box',\r\n          // borderRight: '2px solid black',\r\n          margin: '0px',\r\n          width: this.props.size,\r\n          height: this.props.size,\r\n          backgroundColor: this.backgroundColor(this.state.status === cellStatus.COLORED, this.state.mouseOver),\r\n        }}\r\n        onMouseEnter={() => this.setState({ mouseOver: true })}\r\n        onMouseLeave={() => this.setState({ mouseOver: false })}\r\n        onClick={this.click.bind(this)}\r\n      >\r\n        {this.state.text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Backdrop from '@material-ui/core/Backdrop';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React, { Component } from 'react';\r\n\r\nexport enum UserRole {\r\n  USER,\r\n  ADMIN,\r\n  SUPERVISOR,\r\n}\r\n\r\ntype LoginProps = {\r\n  authCallback: (username: string, role: UserRole, labelX: string[], labelY: string[]) => void;\r\n};\r\n\r\ntype LoginState = {\r\n  isDialogVisible: boolean;\r\n  usernameError: string;\r\n  passwordError: string;\r\n};\r\n\r\nclass Login extends Component<LoginProps, LoginState> {\r\n  state = {\r\n    isDialogVisible: true,\r\n    usernameError: '',\r\n    passwordError: '',\r\n  };\r\n\r\n  headerText = 'Bejelentkezés';\r\n  username: string | null = null;\r\n  password: string | null = null;\r\n  loading = false;\r\n\r\n  handleClose = () => {\r\n    if (this.username !== null && this.password !== null && this.username.length > 0 && this.password.length > 0) {\r\n      this.setState({ isDialogVisible: false });\r\n      this.loading = true;\r\n      // Fetch data from API\r\n\r\n      let labelX = [\r\n        '6 6 7',\r\n        '6 4 5 1',\r\n        '4 1 3 5 3',\r\n        '3 2 4 4',\r\n        '2 1 3',\r\n        '1 2 4',\r\n        '2 2 1 6',\r\n        '2 6 3',\r\n        '2 12',\r\n        '2 12',\r\n        '2 7',\r\n        '2 2 8',\r\n        '2 1 4 5',\r\n        '2 1 3 3',\r\n        '2 3 1 2',\r\n        '2 9',\r\n        '1 1 1 2 2',\r\n        '2 2 1 2',\r\n        '2 1 1 1',\r\n        '2 2 3',\r\n        '3 3',\r\n        '2 2 2',\r\n        '2 1 4',\r\n        '2 2',\r\n        '6',\r\n      ];\r\n      let labelY = [\r\n        '7',\r\n        '11',\r\n        '3 3',\r\n        '3 3',\r\n        '4 2',\r\n        '3 2',\r\n        '2 1 2',\r\n        '3 6 1',\r\n        '2 2 1 2',\r\n        '1 1 6 1',\r\n        '2 2 1 2',\r\n        '3 2 2 2',\r\n        '3 2 4 1 1',\r\n        '2 4 1 1 2 2 1',\r\n        '2 12 2 1',\r\n        '1 1 15 1',\r\n        '1 2 2 6 2 1',\r\n        '5 5 1 1',\r\n        '4 5 3',\r\n        '3 6 2',\r\n        '3 1 5 1',\r\n        '2 1 2 2 2',\r\n        '1 5 1 2',\r\n        '1 5 1 2',\r\n        '7 1 2',\r\n      ];\r\n\r\n      setTimeout(() => {\r\n        // Fake API\r\n        let userRole: UserRole | null = null;\r\n        if (this.username === 'guest' && this.password === 'guest') userRole = UserRole.USER;\r\n        else if (this.username === 'admin' && this.password === 'admin') userRole = UserRole.ADMIN;\r\n        // -----\r\n\r\n        let validCredentials = userRole !== null && this.username !== null;\r\n        this.loading = false;\r\n        if (validCredentials && userRole !== null && this.username !== null) {\r\n          this.props.authCallback(this.username || '', userRole, labelX, labelY);\r\n        } else {\r\n          this.headerText = 'Hibás felhasználónév vagy jelszó';\r\n          this.setState({ isDialogVisible: true });\r\n        }\r\n      }, 1500);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Backdrop open={this.loading}>\r\n          <CircularProgress color=\"primary\" />\r\n        </Backdrop>\r\n        <Dialog open={this.state.isDialogVisible} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n          <DialogTitle id=\"form-dialog-title\">{this.headerText}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>(felhasználónév, jelszó): (guest, guest), (admin, admin)</DialogContentText>\r\n            <TextField\r\n              required\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"username\"\r\n              label=\"Felhasználónév\"\r\n              fullWidth\r\n              onChange={event => {\r\n                this.username = event.target.value;\r\n                this.setState({ usernameError: this.username.length > 0 ? '' : 'Ez a mező kötelező.' });\r\n              }}\r\n              helperText={this.state.usernameError}\r\n              error={this.state.usernameError.length > 0}\r\n              onKeyPress={ev => {\r\n                if (ev.key === 'Enter') {\r\n                  ev.preventDefault();\r\n                  this.handleClose();\r\n                }\r\n              }}\r\n            />\r\n            <TextField\r\n              // autoFocus\r\n              required\r\n              margin=\"dense\"\r\n              id=\"password\"\r\n              label=\"Jelszó\"\r\n              type=\"password\"\r\n              fullWidth\r\n              onChange={event => {\r\n                this.password = event.target.value;\r\n                this.setState({ passwordError: this.password.length > 0 ? '' : 'Ez a mező kötelező.' });\r\n              }}\r\n              helperText={this.state.passwordError}\r\n              error={this.state.passwordError.length > 0}\r\n              onKeyPress={ev => {\r\n                if (ev.key === 'Enter') {\r\n                  ev.preventDefault();\r\n                  this.handleClose();\r\n                }\r\n              }}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            {/* <Button onClick={this.handleClose} color=\"primary\">\r\n        Cancel\r\n      </Button> */}\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Bejelentkezés\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\n\r\nimport { Cell, cellStatus } from './Cell';\r\n\r\ntype BoardProps = {\r\n  cellSize: number;\r\n  labelX: string[];\r\n  labelY: string[];\r\n  returnCells: (cellStates: boolean[][]) => void;\r\n};\r\n\r\nclass Board extends Component<BoardProps> {\r\n  cellState: boolean[][] = [];\r\n\r\n  height = this.props.labelX.length;\r\n  width = this.props.labelY.length;\r\n\r\n  // labelXSize: number;\r\n  // labelYSize: number;\r\n\r\n  constructor(props: BoardProps) {\r\n    super(props);\r\n    for (let i = 0; i < this.height; i++) {\r\n      this.cellState.push([]);\r\n      for (let j = 0; j < this.width; j++) {\r\n        this.cellState[i].push(false);\r\n      }\r\n    }\r\n    this.props.returnCells(this.cellState);\r\n\r\n    // this.labelXSize = this.props.labelX.reduce((prev, current) => (prev.length > current.length) ? prev : current).length;\r\n    // this.labelYSize = this.props.labelY.reduce((prev, current) => (prev.length > current.length) ? prev : current).length;\r\n    // this.labelXSize = (this.labelXSize - 1)/2*32;\r\n  }\r\n\r\n  changeCellState(x: number, y: number, status: cellStatus) {\r\n    // console.log(`Status changed: (${x}, ${y}) to ${status}`);\r\n    this.cellState[y][x] = status === cellStatus.COLORED;\r\n    this.props.returnCells(this.cellState);\r\n    // console.table(this.cellState);\r\n  }\r\n\r\n  render() {\r\n    let cells: JSX.Element[] = [\r\n      <div\r\n        key={'topleft-cell'}\r\n        style={{\r\n          border: '1px solid black',\r\n          boxSizing: 'border-box',\r\n        }}\r\n      ></div>,\r\n    ];\r\n\r\n    // Labels:\r\n    for (let i = 0; i < this.width; i++) {\r\n      cells.push(\r\n        <div\r\n          key={`header-x-${i}`}\r\n          style={{\r\n            gridArea: `1 / ${i + 2} / 1 / ${i + 3}`,\r\n            // display: 'grid',\r\n            display: 'block',\r\n            border: '0.5px solid black',\r\n            borderRight: `${i % 5 === 4 ? 2 : 0.5}px solid black`,\r\n            borderBottom: '2px solid black',\r\n            boxSizing: 'border-box',\r\n            // margin: '0 auto',\r\n            height: '100%',\r\n            width: '100%',\r\n            textAlign: 'center',\r\n            alignItems: 'flex-end',\r\n          }}\r\n        >\r\n          {this.props.labelX[i].split(' ').map((label, j) => {\r\n            return (\r\n              <div\r\n                key={`header-x-${i}-${j}`}\r\n                // style={{margin: 'max auto 0', display: 'block'}}\r\n              >\r\n                {label}\r\n                <br />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>,\r\n      );\r\n    }\r\n    for (let i = 0; i < this.height; i++) {\r\n      cells.push(\r\n        <div\r\n          key={`header-y-${i}`}\r\n          style={{\r\n            gridArea: `${i + 2} / 1 / ${i + 3} / 1`,\r\n            height: this.props.cellSize,\r\n            display: 'block',\r\n            border: '0.5px solid black',\r\n            borderBottom: `${i % 5 === 4 ? 2 : 0.5}px solid black`,\r\n            borderRight: '2px solid black',\r\n            boxSizing: 'border-box',\r\n            margin: '0 auto',\r\n            width: '100%',\r\n            minWidth: this.props.labelY[i].length + 'ch',\r\n            textAlign: 'right',\r\n            // height: '100%',\r\n            //{margin: '0 auto', display: 'block', height: '100%'}\r\n          }}\r\n        >\r\n          {/* <p> */}\r\n          {this.props.labelY[i]}\r\n          {/* </p> */}\r\n        </div>,\r\n      );\r\n    }\r\n\r\n    for (let i = 0; i < this.height; i++) {\r\n      for (let j = 0; j < this.width; j++) {\r\n        cells.push(\r\n          <Cell\r\n            x={j}\r\n            y={i}\r\n            size={this.props.cellSize}\r\n            key={`cell-(${j}, ${i})`}\r\n            changeCellState={(status: cellStatus) => this.changeCellState(j, i, status)}\r\n          />,\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          display: 'inline-grid',\r\n          margin: '16px',\r\n          gridTemplate: `auto ${`${this.props.cellSize}fr `.repeat(this.height)} / \r\n          auto ${`${this.props.cellSize}fr `.repeat(this.width)}`,\r\n          border: '4px solid black',\r\n          // width: `${this.width * this.props.cellSize + this.width*2}px`,\r\n          // height: `${this.height * this.props.cellSize}px`,\r\n          // float: 'left',\r\n          // overflow: 'auto',\r\n          touchAction: 'manipulation',\r\n        }}\r\n      >\r\n        {cells}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport React, { Component } from 'react';\r\n\r\ntype RulesState = {\r\n  isDialogVisible: boolean;\r\n};\r\n\r\nexport default class Rules extends Component<{}, RulesState> {\r\n  state = {\r\n    isDialogVisible: false,\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ isDialogVisible: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Dialog open={this.state.isDialogVisible} onClose={this.handleClose} aria-labelledby=\"simple-dialog-title\">\r\n          <DialogTitle id=\"simple-dialog-title\">Leírás</DialogTitle>\r\n          <DialogContent dividers={true}>\r\n            <DialogContentText\r\n              id=\"scroll-dialog-description\"\r\n              // ref={descriptionElementRef}\r\n              tabIndex={-1}\r\n              style={{ textAlign: 'justify' }}\r\n            >\r\n              {/* {[...new Array(50)]\r\n              .map(\r\n                () => `Cras mattis consectetur purus sit amet fermentum.\r\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\r\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\r\n              )\r\n              .join('\\n')} */}\r\n              Ez a fejtörő rendkívül népszerű Japánban és a világ más országaiban is; vannak rejtvénymagazinok, melyek\r\n              szinte csak ilyen feladványokat tartalmaznak különböző méretekben és nehézségi fokkal.\r\n              <br />\r\n              A feladatok a logika és a grafika különleges elegyét alkotják. A hálózatban található számok alapján a\r\n              megfejtőnek kell eldöntenie, hogy mely négyzeteket színezi feketére. Helyes gondolatmenet esetén kialakul\r\n              a megfejtés, amely egy sematikus ábra, vagy nagyobb feladvány esetén egy részletgazdag kép. Vizsgáljuk meg\r\n              részletesebben a következő egyszerű logigrafikát! (1. ábra)\r\n              <br />\r\n              <img\r\n                style={{ width: '60%', marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\r\n                alt=\"1. ábra\"\r\n                src=\"./img/rules/1. ábra.PNG\"\r\n              />\r\n              <br />\r\n              A vízszintes sorok bal szélén és a függőleges oszlopok tetején látható számok azt jelzik, hogy a fekete\r\n              négyzetek hány csoportban találhatók az adott sorban vagy oszlopban, és az egyes csoportok hány összefüggő\r\n              fekete négyzetből állnak. A 4 1 1 például azt jelenti, hogy ez az oszlop három darab fekete csoportot\r\n              tartalmaz; először négyes, majd egyes és végül újra egyes következik. Fontos, hogy a csoportok között\r\n              legalább egy négyzetnek fehéren kell maradnia. Természetesen fehér mezők a sorok, oszlopok kezdetén és\r\n              végén is lehetnek. A hálózatban a vastagabb fekete vonalak csak a tájékozódást könnyítik meg.\r\n              <br />\r\n              <br />\r\n              Most pedig néhány lépésben tekintsük át a megfejtés menetét!\r\n              <br />\r\n              Először a legnagyobb számokat és így a leghoszszabb csoportokat érdemes vizsgálni. Ha ez a szám nagyobb,\r\n              mint a rendelkezésre álló hely hosszának a fele (ilyen most a negyedik sorban a 8), akkor középen néhány\r\n              mezőt beszínezhetünk. A legalsó sorban minden mezőt be kell színezni, ez kiváló kiindulópont! (2. ábra)\r\n              <br />\r\n              <img\r\n                style={{ width: '60%', marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\r\n                alt=\"2. ábra\"\r\n                src=\"./img/rules/2. ábra.PNG\"\r\n              />\r\n              <br />\r\n              Ezután berajzoljuk a nyilvánvaló következményeket. Mindenképpen hasznos megjelölni (például ponttal vagy\r\n              x-szel) azokat a mezőket, amelyek biztosan nem lehetnek feketék. (3. ábra) Innen már többféle\r\n              továbbhaladási lehetőség nyílik, ezek eredményeként előáll a megfejtés: egy megnyitott vízcsap. (4. ábra)\r\n              <br />\r\n              <img\r\n                style={{ width: '60%', marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\r\n                alt=\"3. ábra\"\r\n                src=\"./img/rules/3. ábra.PNG\"\r\n              />\r\n              <br />\r\n              <img\r\n                style={{ width: '60%', marginLeft: 'auto', marginRight: 'auto', display: 'block' }}\r\n                alt=\"4. ábra\"\r\n                src=\"./img/rules/4. ábra.PNG\"\r\n              />\r\n              <br />\r\n              Forrás: <a href=\"http://www.mategye.hu/download/abacus/20172018/abacus_szeptember.pdf\">mategye.hu</a>\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Értem\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Button onClick={() => this.setState({ isDialogVisible: !this.state.isDialogVisible })}>\r\n          Útmutató a kitöltéshez\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import './App.css';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport React, { Component } from 'react';\n\n// import Link from '@material-ui/core/Link';\nimport Board from './components/Board';\nimport Login, { UserRole } from './components/Login';\nimport Rules from './components/Rules';\n\ntype AppState = {\n  isBoardVisible: boolean;\n  isRulesVisible: boolean;\n  username: string | null;\n  userrole: UserRole | null;\n  labelX: string[];\n  labelY: string[];\n};\n\nclass App extends Component<{}, AppState> {\n  cellStates: boolean[][] = [];\n\n  state = {\n    isBoardVisible: true,\n    isRulesVisible: false,\n    username: null,\n    userrole: null,\n    labelX: [],\n    labelY: [],\n  };\n\n  loading = false;\n\n  sendSolution() {\n    console.table(this.cellStates);\n    this.loading = true;\n    setTimeout(() => {\n      this.loading = false;\n      // this.setState({isBoardVisible: !this.state.isBoardVisible});\n    }, 1500);\n  }\n\n  authCallback = (username: string, role: UserRole, labelX: string[], labelY: string[]) => {\n    this.setState({ username: username, userrole: role, labelX: labelX, labelY: labelY });\n  };\n\n  render() {\n    // let labelX = ['6 6 7', '6 4 5 1', '4 1 3 5 3', '3 2 4 4', '2 1 3', '1 2 4', '2 2 1 6', '2 6 3', '2 12', '2 12', '2 7', '2 2 8', '2 1 4 5', '2 1 3 3', '2 3 1 2', '2 9', '1 1 1 2 2', '2 2 1 2', '2 1 1 1', '2 2 3', '3 3', '2 2 2', '2 1 4', '2 2', '6']\n    // let labelY = ['7', '11', '3 3', '3 3', '4 2', '3 2', '2 1 2', '3 6 1', '2 2 1 2', '1 1 6 1', '2 2 1 2', '3 2 2 2', '3 2 4 1 1', '2 4 1 1 2 2 1', '2 12 2 1', '1 1 15 1', '1 2 2 6 2 1', '5 5 1 1', '4 5 3', '3 6 2', '3 1 5 1', '2 1 2 2 2', '1 5 1 2', '1 5 1 2', '7 1 2'];\n\n    return (\n      <div\n        className=\"App\"\n        style={\n          {\n            // backgroundColor: 'lightgrey'\n          }\n        }\n      >\n        <Login authCallback={this.authCallback} />\n        <h1>Logigrafika pontverseny</h1>\n\n        {this.state.userrole === UserRole.USER ? (\n          <>\n            <Backdrop open={this.loading}>\n              <CircularProgress color=\"primary\" />\n            </Backdrop>\n            <Rules />\n            <br />\n            {this.state.isBoardVisible ? (\n              <Board\n                cellSize={30}\n                labelX={this.state.labelX}\n                labelY={this.state.labelY}\n                returnCells={cellStates => {\n                  this.cellStates = cellStates;\n                }}\n              ></Board>\n            ) : (\n              <div></div>\n            )}\n            <h3>Megoldás beküldése</h3>\n            <TextField\n              required\n              label=\"Mit látható a képen?\"\n              variant=\"outlined\"\n              style={{\n                margin: '6px',\n              }}\n            />\n            <br />\n            <TextField\n              required\n              label=\"Felhasználónév\"\n              defaultValue={this.state.username}\n              // helperText={\n              // <>\n              //   <span>Nem Te vagy? </span>\n              //   <Link style={{display: \"inline\"}} href=\"#\">\n              //     Válts felhasználót!\n              //   </Link>\n              // </>\n              // }\n              InputProps={{\n                readOnly: true,\n              }}\n              variant=\"outlined\"\n              style={{\n                margin: '6px',\n              }}\n            />\n            <br />\n            <Button variant=\"contained\" color=\"primary\" onClick={() => this.sendSolution()}>\n              Beküldés\n            </Button>\n          </>\n        ) : (\n          <></>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n// serviceWorker.register();\n"],"sourceRoot":""}